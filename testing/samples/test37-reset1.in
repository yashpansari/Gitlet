# Check reset command.
# Set up one commit with two files.
# Initialize and add two files.
# Standard commands and definitions
> init
<<<
D DATE "Date: \w\w\w \w\w\w \d+ \d\d:\d\d:\d\d \d\d\d\d [-+]\d\d\d\d"
# A status log header RE.  Captures the commit id in its sole group.
D COMMIT_HEAD "commit ([a-f0-9]+)[ \t]*\n(?:Merge:\s+[0-9a-f]{7}\s+[0-9a-f]{7}[ ]*\n)?${DATE}"
# A full log entry.  Captures the entry. Assume logs messages don't contain
# "==="
D COMMIT_LOG "(===[ ]*\ncommit [a-f0-9]+[ ]*\n(?:Merge:\s+[0-9a-f]{7}\s+[0-9a-f]{7}[ ]*\n)?${DATE}[ ]*\n(?:.|\n)*?(?=\Z|\n===))"
# An arbitrary line of text (works even with ?s)
D ARBLINE "[^\n]*(?=\n|\Z)"
# Zero or more arbitrary full lines of text.
D ARBLINES "(?:(?:.|\n)*(?:\n|\Z)|\A|\Z)"
+ f.txt wug.txt
+ g.txt notwug.txt
> add g.txt
<<<
> add f.txt
<<<
> commit "Two files"
<<<
> branch other
<<<
+ h.txt wug2.txt
> add h.txt
<<<
> rm g.txt
<<<
> commit "Add h.txt and remove g.txt"
<<<
> checkout other
<<<
> rm f.txt
<<<
+ k.txt wug3.txt
> add k.txt
<<<
> commit "Add k.txt and remove f.txt"
<<<
> log
===
${COMMIT_HEAD}
Add k.txt and remove f.txt

===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit

<<<*
D INIT "${3}"
D TWO "${2}"
D OTHER1 "${1}"

> checkout master
<<<
> log
===
${COMMIT_HEAD}
Add h.txt and remove g.txt

===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit
<<<*
D MASTER1 "${1}"
+ m.txt wug.txt
> add m.txt
<<<
> reset ${TWO}
<<<
> status
=== Branches ===
\*master
other

=== Staged Files ===

=== Removed Files ===

=== Modifications Not Staged For Commit ===

=== Untracked Files ===
(m\.txt\n)?\s*
<<<*

> log
===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit
<<<*
> checkout other
<<<
> log
===
${COMMIT_HEAD}
Add k.txt and remove f.txt

===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit

<<<*
> checkout master
<<<
> log
===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit
<<<*
> reset ${MASTER1}
<<<
> log
===
${COMMIT_HEAD}
Add h.txt and remove g.txt

===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit

<<<*